name: Build and push Docker image for subgraph

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      subgraph_name: 
        required: true
        type: string
      graph_id:
        required: true
        type: string
#       graph_variant:
#         required: true
#         type: string
      repo:
        required: true
        type: string
    secrets:
      registry_username:
        required: true
      registry_password:
        required: true
      apollo_key:
        required: true
      npm_token:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Log in to registry
        run: echo "${{ secrets.registry_username }}" | docker login ${{ inputs.repo }} -u "${{ secrets.registry_password }}" --password-stdin

      - name: "Set Graph Variant"
        if: github.ref == 'refs/heads/main'
        run: echo "GRAPH_VARIANT=current" >> $GITHUB_ENV

      - name: "Set Graph Variant"
        if: github.ref != 'refs/heads/main'
        run: echo "GRAPH_VARIANT=staging" >> $GITHUB_ENV

        # We can continue on error because it will fail if already installed
      - name: Install Rover
        continue-on-error: true
        run: |
          curl -sSL https://rover.apollo.dev/nix/v0.4.3 | sh

          # Add Rover to the $GITHUB_PATH so it can be used in another step
          # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#adding-a-system-path
          echo "$HOME/.rover/bin" >> $GITHUB_PATH

      - name: Check subgraph
        run: |
          export APOLLO_KEY=${{ secrets.apollo_key }}
          $HOME/.rover/bin/rover subgraph check ${{inputs.graph_id}}@$GRAPH_VARIANT --schema ./schema.graphql --name ${{inputs.subgraph_name}}

      - name: Build image
        run: |
          export TAG=${{ github.event.pull_request.head.sha || github.sha }}
          export DOCKER_BUILDKIT=1

          docker build \
            --build-arg NPM_TOKEN=${{ secrets.npm_token }} \
            -t ${{inputs.repo}}/${{ inputs.image_name }}:$TAG .

      - name: Push image
        run: |
          export TAG=${{ github.event.pull_request.head.sha || github.sha }} 
          docker push ${{inputs.repo}}/${{ inputs.image_name }}:$TAG
